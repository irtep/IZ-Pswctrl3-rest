{"version":3,"sources":["hooks/index.js","services/login.js","reducers/notificationReducer.js","reducers/usersReducer.js","components/LoginForm.js","components/Notification.js","services/passwords.js","App.js","store.js","index.js"],"names":["useField","type","useState","value","setValue","name","setName","onChange","event","target","loginTools","login","credentials","a","axios","post","response","data","timeouts","addNotification","content","timer","i","length","clearTimeout","dispatch","showNotification","push","window","setTimeout","clearNotification","notiReducer","state","action","username","password","user","usersReducer","concat","style","margin","padding","border","borderRadius","width","LoginForm","useDispatch","useSelector","users","onSubmit","e","preventDefault","className","Notification","notification","notifications","color","baseUrl","token","blogTools","getAll","get","then","res","create","newObject","config","headers","Authorization","setToken","newToken","update","id","field","newValue","put","erase","delete","backgroundColor","App","useEffect","loggedUserJSON","localStorage","getItem","JSON","parse","pswTools","reducer","combineReducers","passes","pswsReducer","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2e363783.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const useResource = (baseUrl) => {\r\n  const [resources, setResources] = useState([])\r\n\r\n  useEffect( () => {\r\n      axios\r\n        .get(baseUrl)\r\n        .then((res) => {\r\n          setResources(res.data)\r\n        })\r\n        .catch( (err) => {\r\n          console.log(err);\r\n        })\r\n  }, [baseUrl]);\r\n\r\n  const create = async (resource) => {\r\n    const response = await axios.post(baseUrl, resource)\r\n    setResources ([...resources, response.data])\r\n  }\r\n\r\n  const service = {\r\n    create\r\n  }\r\n\r\n  return [\r\n    resources, service\r\n  ]\r\n}\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n  const [name, setName] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value);\r\n    setName(event.target.value);\r\n  }\r\n\r\n  return {\r\n    type,\r\n    name,\r\n    value,\r\n    onChange\r\n  }\r\n}\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login';\r\n\r\nconst login =  async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nconst loginTools = { login };\r\nexport default loginTools;\r\n","var timeouts = [];\r\n\r\nexport const addNotification = (content, timer) => {\r\n  for (let i = 0; i < timeouts.length; i++) {\r\n    clearTimeout(timeouts[i]);\r\n  }\r\n  return async dispatch => {\r\n    await dispatch(showNotification(content))\r\n    timeouts.push(window.setTimeout( () => {\r\n      dispatch(clearNotification())\r\n    }, timer * 1000))\r\n  }\r\n};\r\n\r\nconst showNotification = (content) => {\r\n  return {\r\n    type: 'NOTIFICATION',\r\n    data: content\r\n  }\r\n};\r\n\r\nconst clearNotification = () => {\r\n  return {\r\n    type: 'CLEAR',\r\n    data: ''\r\n  }\r\n};\r\n\r\nconst notiReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'NOTIFICATION':\r\n      return action.data\r\n    case 'CLEAR':\r\n      return ''\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\nexport default notiReducer;\r\n","import loginTools from '../services/login';\r\nimport { addNotification } from './notificationReducer';\r\n\r\nconst usersReducer = ( state = [], action ) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n    return state.concat([action.data]);\r\n    case 'LOGOUT':\r\n    return state;\r\n    default: return state;\r\n  }\r\n};\r\n\r\n/*\r\n// action creators\r\nexport const voteThis = (id, content, votes) => {\r\n  return async dispatch => {\r\n    await anecdoteServices.update(id, content, votes + 1)\r\n    dispatch({\r\n      type: 'VOTE',\r\n      data: id\r\n    })\r\n  }\r\n}\r\n*/\r\n\r\nexport const login = ({username, password}) => {\r\n  // make logging attempt and if works, do it\r\n  return async dispatch => {\r\n    try {\r\n      const user = await loginTools.login({\r\n        username, password\r\n      });\r\n      dispatch(addNotification(`welcome: ${username}`, 10));\r\n      dispatch({\r\n        type: 'LOGIN',\r\n        data: user\r\n      });\r\n    } catch (e) {\r\n      dispatch(addNotification('wrong credentials', 10));\r\n    }\r\n  }\r\n};\r\n\r\nexport const logout = () => {\r\n\r\n};\r\n\r\nexport default usersReducer;\r\n/*\r\n// login\r\nconst handleLogin = async (event) => {\r\n  event.preventDefault();\r\n  try {\r\n    const user = await loginTools.login({\r\n      username, password,\r\n    });\r\n    setUser(user);\r\n    setUsername('');\r\n    setPassword('');\r\n    blogTools.setToken(user.token);\r\n    window.localStorage.setItem(\r\n      'userDetails', JSON.stringify(user)\r\n    );\r\n  } catch (exception) {\r\n    setErrorMessage({ msg: 'wrong credentials', badNews: true });\r\n    setTimeout(() => {\r\n      setErrorMessage({ msg: null });\r\n    }, 5000);\r\n  }\r\n};\r\n*/\r\n","import React from 'react';\r\nimport { useField } from '../hooks';\r\nimport { login } from '../reducers/usersReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst style = {\r\n  margin: \"10px\",\r\n  padding: \"8px\",\r\n  border: \"solid 2px yellow\",\r\n  borderRadius: \"5px\",\r\n  width: \"350px\"\r\n}\r\n\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const username = useField('text');\r\n  const password = useField('password');\r\n  const loggedIn = useSelector(state => state.users);\r\n\r\n  const logIn = (e) => {\r\n    e.preventDefault();\r\n    const user = {user: username.value, password: password.value};\r\n    dispatch(login(user));\r\n  };\r\n\r\n  if (loggedIn === []) { return null; }\r\n  return(\r\n    <div style= {style}>\r\n      login:\r\n      <form onSubmit={logIn}>\r\n        username:\r\n        <input {...username} />\r\n        <br/>\r\n        password:\r\n        <input {...password} />\r\n        <br/>\r\n        <button className= \"blackButtons\" >submit login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notifications);\r\n  const style = {\r\n    color: \"red\"\r\n  };\r\n\r\n  return (\r\n    <div style={style}>\r\n      {notification}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/passwords';\r\n// API NOT YET MODIFICATED FOR THESE!\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\n// get all\r\nconst getAll = () => {\r\n  const req = axios.get(baseUrl);\r\n  return req.then(res => res.data);\r\n};\r\n\r\n// create\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n\r\n  const res = await axios.post(baseUrl, newObject, config);\r\n  return res.data;\r\n};\r\n\r\n// update a certain field for certain blog\r\nconst update = (id, field, newValue) => {\r\n  const data = { field: field, newValue: newValue };\r\n  const req = axios.put(`${baseUrl}/${id}`, data);\r\n  return req.then(res => res.data);\r\n};\r\n\r\n// delete blog by id\r\nconst erase = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const req = axios.delete(`${baseUrl}/${id}`, config);\r\n  return req.then(res => res.data);\r\n};\r\n\r\nconst blogTools = { getAll, create, setToken, update, erase };\r\nexport default blogTools;\r\n","import React, { useEffect } from 'react';\nimport LoginForm from './components/LoginForm';\nimport Notification from './components/Notification';\nimport { useDispatch } from 'react-redux';\nimport { login } from './reducers/usersReducer';\nimport pswTools from './services/passwords';\n\nconst style = {\n  backgroundColor: '#1E1B1B',\n  color: '#B3A3A3'\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  // when app is loaded\n  useEffect(() => {\n    const loggedUserJSON = window.localStorage.getItem('uDetails');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      dispatch(login(user));\n      pswTools.setToken(user.token);\n    }\n  // ignoring lint as i need this only when app starts.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return(\n    <div style= {style}>\n      <LoginForm/>\n      <Notification/>\n    </div>\n  );\n};\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport usersReducer from './reducers/usersReducer';\r\nimport pswsReducer from './reducers/pswsReducer';\r\nimport notiReducer from './reducers/notificationReducer'\r\n//import filterReducer from './reducers/filterReducer'\r\n\r\nconst reducer = combineReducers({\r\n  users: usersReducer,\r\n  passes: pswsReducer,\r\n  notifications: notiReducer,\r\n  //filters: filterReducer\r\n});\r\nconst store = createStore(\r\n  reducer, composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}