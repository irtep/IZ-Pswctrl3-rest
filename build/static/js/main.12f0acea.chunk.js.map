{"version":3,"sources":["hooks/index.js","services/login.js","services/passwords.js","services/user.js","reducers/notificationReducer.js","reducers/detailsReducer.js","reducers/usersReducer.js","components/LoginForm.js","reducers/pswsReducer.js","components/NewPswForm.js","reducers/showAndHideReducer.js","utils/index.js","components/PswEntry.js","components/ModificateForm.js","components/DetailsComponent.js","components/MyAccount.js","components/AdminTools.js","components/MainScreen.js","components/Notification.js","App.js","store.js","index.js"],"names":["useField","type","useState","value","setValue","name","setName","onChange","event","target","loginTools","login","credentials","a","axios","post","response","data","baseUrl","token","pswTools","getAll","config","headers","Authorization","get","then","res","create","newObject","setToken","newToken","update","id","field","newValue","put","erase","delete","usersTools","changePw","user","resetUsersPsw","createNewUser","timeouts","addNotification","content","timer","i","length","clearTimeout","dispatch","showNotification","push","window","setTimeout","clearNotification","notiReducer","state","action","detailsReducer","usersReducer","concat","style","margin","padding","border","borderRadius","width","LoginForm","useDispatch","username","password","useSelector","users","className","onSubmit","e","preventDefault","userx","localStorage","setItem","JSON","stringify","pswsReducer","newList","forEach","item","NewPswForm","toggleShow","page","loggedIn","entry","usersId","updated","save","initialState","showModPswForm","showNewPswForm","showPsw","showMyAccount","adminTools","changeShow","elem","showAndHideReducer","newState","copyToClipboard","isInput","tagName","document","createElement","position","left","top","body","appendChild","textContent","succeed","currentFocus","activeElement","focus","setSelectionRange","execCommand","origSelectionStart","origSelectionEnd","PswEntry","showing","showAndHide","onClick","selected","scrollTo","ModificateForm","entryId","edit","DetailsComponent","selectedPsw","details","pswField","toggleShowModForm","userTools","confirm","MyAccount","current","newPsw","newRepeated","AdminTools","resetUser","resetPsw","newName","newUsername","newPassword","resetPassword","forReset","addNewUser","adminChoose","getElementById","newUser","admin","checked","atUp","gridArea","backgroundColor","atLeft","atRight","atBottom","MainScreen","psws","passes","useEffect","allPsws","removeItem","map","psw","Notification","notification","notifications","color","App","loggedUserJSON","getItem","parse","autoLogin","reducer","combineReducers","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render"],"mappings":"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","file":"static/js/main.12f0acea.chunk.js","sourcesContent":["import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\n\r\nexport const useResource = (baseUrl) => {\r\n  const [resources, setResources] = useState([])\r\n\r\n  useEffect( () => {\r\n      axios\r\n        .get(baseUrl)\r\n        .then((res) => {\r\n          setResources(res.data)\r\n        })\r\n        .catch( (err) => {\r\n          console.log(err);\r\n        })\r\n  }, [baseUrl]);\r\n\r\n  const create = async (resource) => {\r\n    const response = await axios.post(baseUrl, resource)\r\n    setResources ([...resources, response.data])\r\n  }\r\n\r\n  const service = {\r\n    create\r\n  }\r\n\r\n  return [\r\n    resources, service\r\n  ]\r\n}\r\n\r\nexport const useField = (type) => {\r\n  const [value, setValue] = useState('')\r\n  const [name, setName] = useState('')\r\n\r\n  const onChange = (event) => {\r\n    setValue(event.target.value);\r\n    setName(event.target.value);\r\n  }\r\n\r\n  return {\r\n    type,\r\n    name,\r\n    value,\r\n    onChange\r\n  }\r\n}\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login'; // prod\r\n//const baseUrl = 'http://localhost:3001/api/login' // dev\r\n\r\nconst login =  async (credentials) => {\r\n  const response = await axios.post(baseUrl, credentials);\r\n  return response.data;\r\n};\r\n\r\nconst loginTools = { login };\r\nexport default loginTools;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/passwords';  // prod\r\n//const baseUrl = 'http://localhost:3001/api/passwords'; // dev\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\n// get all\r\nconst getAll = () => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const req = axios.get(baseUrl, config);\r\n  return req.then(res => res.data);\r\n};\r\n\r\n// create\r\nconst create = async newObject => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const res = await axios.post(baseUrl, newObject, config);\r\n  return res.data;\r\n};\r\n\r\n// update a certain field for certain blog\r\nconst update = (id, field, newValue) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const data = { field: field, newValue: newValue };\r\n  const req = axios.put(`${baseUrl}/${id}`, data, config);\r\n  return req.then(res => res.data);\r\n};\r\n\r\n// delete blog by id\r\nconst erase = (id) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const req = axios.delete(`${baseUrl}/${id}`, config);\r\n  return req.then(res => res.data);\r\n};\r\n\r\nconst pswTools = { getAll, create, setToken, update, erase };\r\nexport default pswTools;\r\n","import axios from 'axios';\r\nconst baseUrl = '/api/login'; // prod\r\n//const baseUrl = 'http://localhost:3001/api/users' // dev\r\nlet token = null;\r\n\r\nconst setToken = newToken => {\r\n  token = `bearer ${newToken}`;\r\n};\r\n\r\nconst changePw =  async (data) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.put(`${baseUrl}/${data.user}`, data, config);\r\n  return response.data;\r\n};\r\n\r\nconst resetUsersPsw = async (data) => {\r\n  const config = {\r\n    headers: { Authorization: token },\r\n  };\r\n  const response = await axios.put(`${baseUrl}/reset`, data, config);\r\n  return response.data;\r\n};\r\n\r\nconst createNewUser = async (data) => {\r\n    const config = {\r\n      headers: { Authorization: token },\r\n    };\r\n    const response = await axios.post(baseUrl, data, config);\r\n    return response.data;\r\n};\r\n\r\nconst usersTools = { setToken, changePw, resetUsersPsw, createNewUser };\r\nexport default usersTools;\r\n","var timeouts = [];\r\n\r\nconst notiReducer = (state = '', action) => {\r\n  switch (action.type) {\r\n    case 'NOTIFICATION':\r\n      return action.data\r\n    case 'CLEAR':\r\n      return ''\r\n    default:\r\n      return state\r\n  }\r\n};\r\n\r\n//action creators\r\nexport const addNotification = (content, timer) => {\r\n  for (let i = 0; i < timeouts.length; i++) {\r\n    clearTimeout(timeouts[i]);\r\n  }\r\n  return async dispatch => {\r\n    await dispatch(showNotification(content))\r\n    timeouts.push(window.setTimeout( () => {\r\n      dispatch(clearNotification())\r\n    }, timer * 1000))\r\n  }\r\n};\r\n\r\nconst showNotification = (content) => {\r\n  return {\r\n    type: 'NOTIFICATION',\r\n    data: content\r\n  }\r\n};\r\n\r\nconst clearNotification = () => {\r\n  return {\r\n    type: 'CLEAR',\r\n    data: ''\r\n  }\r\n};\r\n\r\nexport default notiReducer;\r\n","const detailsReducer = ( state = '', action ) => {\r\n  switch (action.type) {\r\n    case 'SELECTED':\r\n    return action.data;\r\n    default: return state;\r\n  };\r\n};\r\n\r\n// action creators\r\nexport const selectNew = (selected) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'SELECTED',\r\n      data: selected\r\n    })\r\n  };\r\n};\r\n\r\nexport const clearDetails = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'SELECTED',\r\n      data: ''\r\n    });\r\n  };\r\n}\r\n\r\nexport default detailsReducer;\r\n","import loginTools from '../services/login';\r\nimport pswTools from '../services/passwords';\r\nimport usersTools from '../services/user';\r\nimport { addNotification } from './notificationReducer';\r\nimport { clearDetails } from './detailsReducer';\r\n\r\nconst usersReducer = ( state = [], action ) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n    return state.concat([action.data]);\r\n    case 'LOGOUT':\r\n      let newState = [...state];\r\n      newState = [];\r\n    return newState;\r\n    default: return state;\r\n  }\r\n};\r\n\r\n// action creators\r\nexport const login = ({username, password}) => {\r\n  return async dispatch => {\r\n    try {\r\n      const userx = await loginTools.login({\r\n        username, password\r\n      });\r\n      // login ok\r\n      pswTools.setToken(userx.token);\r\n      usersTools.setToken(userx.token);\r\n      window.localStorage.setItem(\r\n        'uDetails', JSON.stringify(userx)\r\n      );\r\n      dispatch(addNotification(`welcome: ${username}`, 10));\r\n      dispatch({\r\n        type: 'LOGIN',\r\n        data: userx\r\n      });\r\n    } catch (e) {\r\n      dispatch(addNotification('wrong credentials', 10));\r\n    }\r\n  }\r\n};\r\n\r\nexport const autoLogin = (user) => {\r\n  user = JSON.parse(user);\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'LOGIN',\r\n      data: user\r\n    });\r\n  }\r\n};\r\n\r\n\r\nexport const logout = () => {\r\n  return async dispatch => {\r\n    pswTools.setToken('');\r\n    window.localStorage.removeItem('uDetails');\r\n    dispatch(addNotification(`logged out.`, 5));\r\n    dispatch(clearDetails());\r\n    dispatch({\r\n      type: 'LOGOUT',\r\n      data: ''\r\n    });\r\n  }\r\n};\r\n\r\nexport const changeAccountPassword = (data) => {\r\n  return async dispatch => {\r\n    dispatch(addNotification('working on it. wait.'));\r\n    try {\r\n      await usersTools.changePw(data);\r\n      dispatch(addNotification('ok, changed.'));\r\n    } catch (e) {\r\n      dispatch(addNotification(`${e}`, 5));\r\n    }\r\n  };\r\n};\r\n\r\nexport default usersReducer;\r\n","import React from 'react';\r\nimport { useField } from '../hooks';\r\nimport { login } from '../reducers/usersReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst style = {\r\n  margin: \"10px\",\r\n  padding: \"8px\",\r\n  border: \"solid 2px blue\",\r\n  borderRadius: \"5px\",\r\n  width: \"350px\"\r\n}\r\n\r\n\r\nconst LoginForm = () => {\r\n  const dispatch = useDispatch();\r\n  const username = useField('text');\r\n  const password = useField('password');\r\n  const loggedIn = useSelector(state => state.users);\r\n\r\n  const logIn = (e) => {\r\n    e.preventDefault();\r\n    const user = {username: username.value, password: password.value};\r\n    dispatch(login(user));\r\n  };\r\n\r\n  if (loggedIn === []) { return null; }\r\n  return(\r\n    <div style= {style}>\r\n      <span className= \"whiteText\">login:</span>\r\n      <form onSubmit={logIn}>\r\n        username:\r\n        <input {...username} />\r\n        <br/>\r\n        password:\r\n        <input {...password} />\r\n        <br/>\r\n        <button className= \"blackButtons\" >submit login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n","import pswTools from '../services/passwords';\r\nimport { addNotification } from './notificationReducer';\r\nimport { clearDetails } from './detailsReducer';\r\n\r\nconst pswsReducer = (state = [], action) => {\r\n  switch (action.type) {\r\n    case 'NEWLIST':\r\n      let newList = state.concat([]);\r\n      action.data.forEach((item) => {\r\n        newList.push(item);\r\n      });\r\n      return newList;\r\n    case 'MODDED_LIST':\r\n      return action.data;\r\n    case 'CLEAR_LIST':\r\n      return [];\r\n    case 'PSW_DELETE':\r\n      return action.data;\r\n    default: return state;\r\n  }\r\n};\r\n\r\n// action creators\r\nexport const save = (entry, usersId) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(addNotification('wait. working on it', 6));\r\n      await pswTools.create(entry);\r\n      const updated = await pswTools.getAll();\r\n      dispatch(addNotification('new entry created', 5));\r\n      dispatch({\r\n        type: 'MODDED_LIST',\r\n        data: updated\r\n      });\r\n    } catch (e) {\r\n      dispatch(addNotification(`${e}`, 10));\r\n    }\r\n  }\r\n};\r\n\r\nexport const getAll = () => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(addNotification('wait. getting list', 6));\r\n      const allPsws = await pswTools.getAll();\r\n      dispatch(addNotification('got password list', 3));\r\n      dispatch({\r\n        type: 'NEWLIST',\r\n        data: allPsws\r\n      });\r\n    } catch (e) {\r\n      dispatch(addNotification(`error fetching passwords ${e}`, 7));\r\n    }\r\n  };\r\n};\r\n\r\nexport const clearPsws = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'CLEAR_LIST'\r\n    });\r\n  }\r\n};\r\n\r\nexport const deletePsw = (id) => {\r\n  return async dispatch => {\r\n    try {\r\n      dispatch(addNotification('wait. working on it', 6));\r\n      await pswTools.erase(id);\r\n      const updated = await pswTools.getAll();\r\n      dispatch(addNotification('entry deleted!', 3));\r\n      dispatch(clearDetails());\r\n      dispatch({\r\n        type: 'MODDED_LIST',\r\n        data: updated\r\n      });\r\n    } catch (e){\r\n      dispatch(addNotification(`delete failed: ${e}`, 10));\r\n    }\r\n  };\r\n};\r\n\r\nexport const edit = (entry, entryId) => {\r\n  return async dispatch => {\r\n    dispatch(addNotification('wait. working on it', 6));\r\n    try {\r\n      if (entry.page !== '') {\r\n        await pswTools.update(entryId, 'page', entry.page);\r\n      }\r\n      if (entry.username !== '') {\r\n        await pswTools.update(entryId, 'username', entry.username);\r\n      }\r\n      if (entry.password !== '') {\r\n        await pswTools.update(entryId, 'password', entry.password);\r\n      }\r\n      const updated = await pswTools.getAll();\r\n      dispatch(addNotification('edited selected fields.', 3));\r\n      dispatch(clearDetails());\r\n      dispatch({\r\n        type: 'MODDED_LIST',\r\n        data: updated\r\n      });\r\n    } catch (e){\r\n      dispatch(addNotification(`edit failed: ${e}`, 10));\r\n    }\r\n  };\r\n};\r\nexport default pswsReducer;\r\n","import React from 'react';\r\nimport { useField } from '../hooks';\r\nimport { save } from '../reducers/pswsReducer';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nconst style = {\r\n  margin: \"10px\",\r\n  padding: \"8px\",\r\n  border: \"solid 2px blue\",\r\n  borderRadius: \"5px\",\r\n  width: \"350px\"\r\n}\r\n\r\n\r\nconst NewPswForm = ({toggleShow}) => {\r\n  const dispatch = useDispatch();\r\n  const page = useField('text');\r\n  const username = useField('text');\r\n  const password = useField('text');\r\n  const loggedIn = useSelector(state => state.users);\r\n\r\n  const newEntry = (e) => {\r\n    e.preventDefault();\r\n    const entry = {\r\n      page: page.value,\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n    dispatch(save(entry, loggedIn[0].id));\r\n    toggleShow();\r\n  };\r\n\r\n  if (loggedIn === []) { return null; }\r\n  return(\r\n    <div style= {style}>\r\n      <form onSubmit={newEntry}>\r\n        page:\r\n        <input {...page} />\r\n        <br/>\r\n        username:\r\n        <input {...username} />\r\n        <br/>\r\n        password:\r\n        <input {...password} />\r\n        <br/>\r\n        <button className= \"blackButtons\" >save new password</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewPswForm;\r\n","const initialState = {\r\n  showModPswForm: false,\r\n  showNewPswForm: false,\r\n  showPsw: false,\r\n  showMyAccount: false,\r\n  adminTools: false\r\n}\r\n\r\nconst showAndHideReducer = ( state = initialState, action ) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      const newState = {...state};\r\n      newState[action.data] = !state[action.data];\r\n      return newState;\r\n    case 'RESET_SHOWS':\r\n      return initialState;\r\n    default: return state;\r\n  };\r\n};\r\n\r\n// action creators\r\nexport const changeShow = (elem) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      data: elem\r\n    });\r\n  }\r\n};\r\n\r\nexport const resetShows = () => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: 'RESET_SHOWS'\r\n    })\r\n  };\r\n};\r\n\r\nexport default showAndHideReducer;\r\n","// blast from the past! Copied this from internet long long time ago, don't remember from where thou..\r\nexport const copyToClipboard = (elem) => {\r\n  var targetId = \"_hiddenCopyText_\";\r\n  var isInput = elem.tagName === \"INPUT\" || elem.tagName === \"TEXTAREA\";\r\n  var origSelectionStart, origSelectionEnd;\r\n\r\n    var target = document.createElement(\"textarea\");\r\n\r\n      target.style.position = \"absolute\";\r\n      target.style.left = \"-9999px\";\r\n      target.style.top = \"0\";\r\n      target.id = targetId;\r\n      document.body.appendChild(target);\r\n\r\n      target.textContent = elem;\r\n\r\n    // select the content\r\n    var currentFocus = document.activeElement;\r\n    target.focus();\r\n    target.setSelectionRange(0, target.value.length);\r\n    // copy the selection\r\n    var succeed;\r\n    try {\r\n      succeed = document.execCommand(\"copy\");\r\n    }\r\n    catch(e) {\r\n      succeed = false;\r\n    }\r\n    // restore original focus\r\n    if (currentFocus && typeof currentFocus.focus === \"function\") {\r\n      currentFocus.focus();\r\n    }\r\n    if (isInput) {\r\n      // restore prior selectio\r\n      elem.setSelectionRange(origSelectionStart, origSelectionEnd);\r\n    }\r\n    else {\r\n      // clear temporary content\r\n      target.textContent = \"\";\r\n    }\r\n    return succeed;\r\n} // end of copy mechanism\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { selectNew } from '../reducers/detailsReducer';\r\nimport { addNotification } from '../reducers/notificationReducer';\r\nimport { changeShow } from '../reducers/showAndHideReducer';\r\nimport { copyToClipboard } from '../utils';\r\n\r\nconst PswEntry = ({entry}) => {\r\n  const showing = useSelector(state => state.showAndHide);\r\n  const dispatch = useDispatch();\r\n  const selectEntry = () => {\r\n    if (showing.showMyAccount) {\r\n      dispatch(changeShow('showMyAccount'));\r\n    }\r\n    dispatch(selectNew(entry));\r\n    dispatch(addNotification('password copied to clipboard, control+v to paste it somewhere', 5));\r\n    copyToClipboard(entry.password);\r\n    window.scrollTo(0, 0);\r\n  }\r\n  return(\r\n    <div\r\n      className= \"greenButtons\"\r\n      onClick= {selectEntry}>\r\n      {entry.page}\r\n    </div>);\r\n};\r\n\r\nexport default PswEntry;\r\n","import React from 'react';\r\nimport { useField } from '../hooks';\r\nimport { useDispatch } from 'react-redux';\r\nimport { edit } from '../reducers/pswsReducer';\r\nconst style = {\r\n  margin: \"10px\",\r\n  padding: \"8px\",\r\n  border: \"solid 2px blue\",\r\n  borderRadius: \"5px\",\r\n  width: \"350px\"\r\n};\r\n\r\nconst ModificateForm = ({showModPswForm, entryId}) => {\r\n  const dispatch = useDispatch();\r\n  const page = useField('text');\r\n  const username = useField('text');\r\n  const password = useField('text');\r\n\r\n  const modEntry = (e) => {\r\n    e.preventDefault();\r\n    const entry = {\r\n      page: page.value,\r\n      username: username.value,\r\n      password: password.value,\r\n    };\r\n    dispatch(edit(entry, entryId));\r\n    showModPswForm();\r\n  };\r\n\r\n  return(\r\n    <div style= {style}>\r\n      <form onSubmit={modEntry}>\r\n        enter new values. <br/>\r\n        <span className= \"whiteText\">leave empty values you don't want to modificate!</span>\r\n        <br/>\r\n        page:\r\n        <input {...page} />\r\n        <br/>\r\n        username:\r\n        <input {...username} />\r\n        <br/>\r\n        password:\r\n        <input {...password} />\r\n        <br/>\r\n        <button className= \"blackButtons\" >modificate filled fields</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModificateForm;\r\n","import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addNotification } from '../reducers/notificationReducer';\r\nimport { deletePsw } from '../reducers/pswsReducer';\r\nimport { clearDetails } from '../reducers/detailsReducer';\r\nimport { changeShow } from '../reducers/showAndHideReducer';\r\nimport { copyToClipboard } from '../utils';\r\nimport ModificateForm from './ModificateForm';\r\n\r\nconst DetailsComponent = () => {\r\n  const dispatch = useDispatch();\r\n  const showAndHide = useSelector(state => state.showAndHide);\r\n  const selectedPsw = useSelector(state => state.details);\r\n  let pswField = '';\r\n\r\n  const toggleShow = () => {\r\n    dispatch(changeShow('showPsw'));\r\n  };\r\n  const toggleShowModForm = () => {\r\n    dispatch(changeShow('showModPswForm'));\r\n  };\r\n  const copyToCp = () => {\r\n    copyToClipboard(selectedPsw.username)\r\n    dispatch(addNotification('username copied to clipboard', 3));\r\n  }\r\n  const deleteEntry = () => {\r\n    if (window.confirm(`delete psw of: ${selectedPsw.page}?`)) {\r\n      dispatch(clearDetails());\r\n      dispatch(deletePsw(selectedPsw.id));\r\n    }\r\n  };\r\n\r\n  const userTools = <div><input\r\n    type= \"button\"\r\n    className= \"blackButtons\"\r\n    value= \"show/hide password\"\r\n    onClick= {toggleShow}/><br/>\r\n    <input\r\n    type= \"button\"\r\n    className= \"blackButtons\"\r\n    value= \"copy username\"\r\n    onClick= {copyToCp}/><br/>\r\n    <input\r\n    type= \"button\"\r\n    className= \"yellowButtons\"\r\n    value= \"modificate entry\"\r\n    onClick= {() => toggleShowModForm()}/><br/>\r\n    <input\r\n    type= \"button\"\r\n    className= \"redButtons\"\r\n    value= \"delete entry\"\r\n    onClick= {deleteEntry}/></div>;\r\n\r\n  if (selectedPsw === '') {\r\n      pswField = '';\r\n  };\r\n\r\n  if (selectedPsw !== '') {\r\n    if (showAndHide.showPsw) {\r\n      pswField = `password: ${selectedPsw.password}`;\r\n    } else {\r\n      pswField = '';\r\n    }\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      page: <span className= \"whiteText\">{selectedPsw.page}</span><br/>\r\n      username: <span className= \"whiteText\">{selectedPsw.username}</span><br/>\r\n      {pswField}<br/>\r\n      {selectedPsw !== ''?\r\n      userTools:\r\n      <></>}\r\n      <div>\r\n        {showAndHide.showModPswForm?\r\n        <ModificateForm\r\n          showModPswForm= {toggleShowModForm}\r\n          entryId = {selectedPsw.id}/>:\r\n        <></>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailsComponent;\r\n","import React from 'react';\r\nimport { useField } from '../hooks';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { addNotification } from '../reducers/notificationReducer';\r\nimport { changeAccountPassword } from '../reducers/usersReducer';\r\n\r\nconst MyAccount = () => {\r\n  const dispatch = useDispatch();\r\n  const current = useField('password');\r\n  const newPsw = useField('password');\r\n  const newRepeated = useField('password');\r\n  const loggedIn = useSelector(state => state.users);\r\n\r\n  const changeAccountPsw = (e) => {\r\n    e.preventDefault();\r\n    if (newPsw.value !== newRepeated.value) {\r\n      dispatch(addNotification('new passwords are now equal', 4));\r\n    } else if (current.value === '' || newPsw.value === ''){\r\n      dispatch(addNotification('empty fields.', 4));\r\n    } else {\r\n      dispatch(changeAccountPassword({\r\n        user: loggedIn[0].id,\r\n        current: current.value,\r\n        newPsw: newPsw.value\r\n      }));\r\n      dispatch(addNotification('Password changed!.', 4));\r\n    }\r\n  };\r\n\r\n  return(\r\n    <div>\r\n      <form onSubmit= {changeAccountPsw}>\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td className= \"whiteText\">\r\n            change accounts password\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>current password:</td>\r\n              <td><input {...current}/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>new password: (min 3 characters)</td>\r\n              <td><input {...newPsw}/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>repeat new password</td>\r\n              <td><input {...newRepeated}/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        <button type= \"submit\" className= \"grayButtons\">change it.</button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MyAccount;\r\n","import React from 'react';\r\nimport { useField } from '../hooks';\r\nimport usersTools from '../services/user';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addNotification } from '../reducers/notificationReducer';\r\nimport { resetShows } from '../reducers/showAndHideReducer';\r\n\r\nconst AdminTools = () => {\r\n  const dispatch = useDispatch();\r\n  const resetUser = useField('text');\r\n  const resetPsw = useField('text');\r\n  const newName = useField('text');\r\n  const newUsername = useField('text');\r\n  const newPassword = useField('text');\r\n\r\n  const resetPassword = async (e) => {\r\n    e.preventDefault();\r\n    const forReset = {\r\n      user: resetUser.value,\r\n      newPsw: resetPsw.value\r\n    }\r\n    dispatch(addNotification('ok, reseting', 5));\r\n    try {\r\n      await usersTools.resetUsersPsw(forReset);\r\n      resetUser.value = '';\r\n      resetPsw.value = '';\r\n      dispatch(addNotification('reseted!', 3));\r\n    } catch (e) {\r\n      dispatch(addNotification(`error: ${e}`, 3));\r\n    }\r\n    dispatch(resetShows());\r\n  };\r\n\r\n  const addNewUser = async (e) => {\r\n    e.preventDefault();\r\n    const adminChoose = document.getElementById('isAdmin');\r\n    const newUser = {\r\n      name: newName.value,\r\n      username: newUsername.value,\r\n      password: newPassword.value,\r\n      admin: false\r\n    };\r\n\r\n    if (adminChoose.checked) { newUser.admin = true; }\r\n    dispatch(addNotification('adding new user', 5));\r\n    try {\r\n      await usersTools.createNewUser(newUser);\r\n      dispatch(addNotification('added user', 5));\r\n    } catch (e) {\r\n      dispatch(addNotification(`error: ${e}`, 5));\r\n    }\r\n  };\r\n  return(\r\n    <div>\r\n      <h4>admin tools</h4>\r\n      <div>\r\n        <span className= \"whiteText\">Reset password for user:</span>\r\n        <form onSubmit={resetPassword} className= \"adminForms\">\r\n          username:\r\n          <input {...resetUser} />\r\n          <br/>\r\n          new password:\r\n          <input {...resetPsw} />\r\n          <br/>\r\n          <button className= \"blackButtons\" >reset users password</button>\r\n        </form>\r\n      </div>\r\n      <div>\r\n        <span className= \"whiteText\">Create new user:</span>\r\n        <form onSubmit={addNewUser} className= \"adminForms\">\r\n          name:\r\n          <input {...newName} />\r\n          <br/>\r\n          username:\r\n          <input {...newUsername} />\r\n          <br/>\r\n          password:\r\n          <input {...newPassword} />\r\n          <br/>\r\n          admin:\r\n          <input id= \"isAdmin\" type= \"radio\" name= \"rights\" value= \"yes\"/>yes\r\n          <input type= \"radio\" name= \"rights\" value= \"no\"/>no\r\n          <br/>\r\n          <button className= \"blackButtons\" >add new user</button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminTools;\r\n","import React, { useEffect } from 'react';\r\nimport NewPswForm from './NewPswForm';\r\nimport PswEntry from './PswEntry';\r\nimport DetailsComponent from './DetailsComponent';\r\nimport MyAccount from './MyAccount';\r\nimport AdminTools from './AdminTools';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { logout } from '../reducers/usersReducer';\r\nimport { getAll, clearPsws } from '../reducers/pswsReducer';\r\nimport { changeShow, resetShows } from '../reducers/showAndHideReducer';\r\nimport './mainScreen.css';\r\n\r\nconst atUp = {\r\n  gridArea: 'atUp',\r\n  backgroundColor: 'black',\r\n  padding: \"5px\"\r\n};\r\nconst atLeft = {gridArea: 'atLeft'};\r\nconst atRight = {gridArea: 'atRight'};\r\nconst atBottom = {gridArea: 'atBottom'};\r\n\r\nconst MainScreen = () => {\r\n  const user = useSelector(state => state.users);\r\n  const psws = useSelector(state => state.passes);\r\n  const showAndHide = useSelector(state => state.showAndHide);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(clearPsws());\r\n    dispatch(getAll());\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const logOutUser = () => {\r\n    dispatch(clearPsws());\r\n    dispatch(resetShows());\r\n    dispatch(logout());\r\n  };\r\n\r\n  const toggleShow = () => {\r\n    dispatch(changeShow('showNewPswForm'));\r\n  }\r\n\r\n  const myAccount = () => {\r\n    dispatch(changeShow('showMyAccount'));\r\n  }\r\n\r\n  const admins = () => {\r\n    dispatch(changeShow('adminTools'));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <div id= \"gridContainer\">\r\n        <div id= \"heads\" style= {atUp}>\r\n        logged in as <span className= \"whiteText\">{user[0].name}</span> &nbsp;\r\n        <button className= \"redButtons\" onClick= {logOutUser}>log out</button> &nbsp;\r\n        <button className= \"blackButtons\" onClick= {myAccount}>my account</button> &nbsp;\r\n        {user[0].admin?\r\n        <button className= \"redButtons\" onClick= {admins}>admin tools</button>:\r\n        <></>}\r\n        </div>\r\n        <div id= \"leftCenter\" style= {atLeft}>\r\n          saved passwords:\r\n          <ul>\r\n          {psws.map( psw => {\r\n            if (psw.user.id === user[0].id) {\r\n              return (\r\n                <li key= {psw.id}>\r\n                  <PswEntry\r\n                  entry= {psw}\r\n                  />\r\n                </li>\r\n              );\r\n            } else {\r\n              return null;\r\n            }\r\n          })}\r\n          </ul>\r\n        </div>\r\n        <div id= \"rightCenter\" style= {atRight}>\r\n          {showAndHide.showMyAccount?\r\n          <MyAccount/>:\r\n          <DetailsComponent/>}\r\n          <div>\r\n            {showAndHide.adminTools?\r\n            <AdminTools/>:\r\n            <></>}\r\n          </div>\r\n        </div>\r\n        <div id= \"foots\" style= {atBottom}>\r\n          {showAndHide.showNewPswForm ?\r\n           <NewPswForm\r\n             toggleShow = {toggleShow}/>:\r\n           <input  className= \"blackButtons\"\r\n             type= \"button\"\r\n             onClick= {toggleShow}\r\n             value= \"save new password\"/>}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainScreen;\r\n","import React from 'react'\r\nimport { useSelector } from 'react-redux'\r\n\r\nconst Notification = () => {\r\n  const notification = useSelector(state => state.notifications);\r\n  const style = {\r\n    color: \"red\"\r\n  };\r\n\r\n  return (\r\n    <div style={style}>\r\n      {notification}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import React, { useEffect } from 'react';\nimport LoginForm from './components/LoginForm';\nimport MainScreen from './components/MainScreen';\nimport Notification from './components/Notification';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { autoLogin } from './reducers/usersReducer';\nimport { clearPsws } from './reducers/pswsReducer';\nimport pswTools from './services/passwords';\nimport usersTools from './services/user';\n\nconst style = {\n  position: 'absolute',\n  backgroundColor: '#1E1B1B',\n  color: '#B3A3A3',\n  width: '90vw',\n  padding: '10px 30px 100px 10px',\n  border: '5px black solid',\n  borderRadius: '5px',\n  left: '0',\n  top: '0'\n};\n\nconst App = () => {\n  const dispatch = useDispatch();\n  const loggedIn = useSelector(state => state.users);\n\n  // when app is loaded\n  useEffect(() => {\n    dispatch(clearPsws());\n    const loggedUserJSON = window.localStorage.getItem('uDetails');\n    if (loggedUserJSON) {\n      const user = JSON.parse(loggedUserJSON);\n      dispatch(autoLogin(loggedUserJSON));\n      pswTools.setToken(user.token);\n      usersTools.setToken(user.token);\n    }\n  // ignoring lint as i need this only when app starts.\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return(\n    <div style= {style}>\n      <Notification/>\n      {loggedIn.length === 0 ?\n        <LoginForm/> :\n        <MainScreen/> }\n    </div>\n  );\n};\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport usersReducer from './reducers/usersReducer';\r\nimport pswsReducer from './reducers/pswsReducer';\r\nimport notiReducer from './reducers/notificationReducer';\r\nimport detailsReducer from './reducers/detailsReducer';\r\nimport showAndHideReducer from './reducers/showAndHideReducer';\r\n//import filterReducer from './reducers/filterReducer'\r\n\r\nconst reducer = combineReducers({\r\n  users: usersReducer,\r\n  passes: pswsReducer,\r\n  notifications: notiReducer,\r\n  details: detailsReducer,\r\n  showAndHide: showAndHideReducer\r\n});\r\n\r\nconst store = createStore(\r\n  reducer, composeWithDevTools(\r\n    applyMiddleware(thunk)\r\n  )\r\n);\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './store';\nimport './index.css';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}